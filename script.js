/* Nesse desafio, voc√™ ir√° solicitar ao usu√°rio que ele insira **dois n√∫meros** e, a partir da√≠, calcular:

- [ ]  A soma dos dois n√∫meros;
- [ ]  A subtra√ß√£o dos dois n√∫meros;
- [ ]  A multiplica√ß√£o dos dois n√∫meros;
- [ ]  A divis√£o dos dois n√∫meros;
- [ ]  O resto da divis√£o dos dois n√∫meros;

F√°cil at√© aqui, n√©? Bora se desafiar? üëÄ üßë‚ÄçüöÄ

- [ ]  Verifique se a soma dos dois n√∫meros √© par ~~(ou √≠mpar)~~;
- [ ]  Verifique se os dois n√∫meros inseridos s√£o iguais ~~(ou diferentes)~~. */

let num1 = Number(prompt("Digite um n√∫mero: "));
let num2 = Number(prompt("Digite outro n√∫mero: "));


while (isNaN(num1) || isNaN(num2)) {
  alert("Voc√™ n√£o digitou um n√∫mero em uma das caixinhas. Tente novamente.");
  num1 = Number(prompt("Digite um n√∫mero: "));
  num2 = Number(prompt("Digite outro n√∫mero: "));
}

function sum(num1, num2) {
  return num1 + num2;
}

function subtraction(num1, num2) {
  return num1 - num2;
}

function multiplication(num1, num2) {
  return num1 * num2;
}

function division(num1, num2) {
  return num1 / num2;
}

function rest(num1, num2) {
  return num1 % num2;
}

function sumIsEven(num1, num2) {
  if ((num1 + num2) % 2 === 0) {
    return "A soma dos dois n√∫meros √© par.";
  } else {
    return "A soma dos dois n√∫meros √© √≠mpar.";
  }
}

function isEquals(num1, num2) {
  if (num1 === num2) {
    return "Os dois n√∫meros s√£o iguais.";
  } else {
    return "Os dois n√∫meros s√£o diferentes.";
  }
}

alert(`
A soma entre ${num1} e ${num2} √©: ${sum(num1, num2).toFixed(2)}
`);

alert(`
A subtra√ß√£o entre ${num1} e ${num2} √©: ${subtraction(num1, num2).toFixed(2)}
`);

alert(`
A multiplica√ß√£o entre ${num1} e ${num2} √©: ${multiplication(num1, num2).toFixed(2)}
`);

alert(`
A divis√£o entre ${num1} e ${num2} √©: ${division(num1, num2).toFixed(2)}
`);

alert(`
O resto da divis√£o entre ${num1} e ${num2} √©: ${rest(num1, num2).toFixed(0)}
`);

alert(sumIsEven(num1, num2));
alert(isEquals(num1, num2));
